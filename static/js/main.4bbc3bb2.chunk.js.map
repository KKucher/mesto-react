{"version":3,"sources":["components/Header.js","components/Footer.js","utils/api.js","components/Cards.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Footer","api","options","this","_token","baseUrl","_authorization","headers","authorization","_contentType","fetch","method","then","res","ok","json","Promise","reject","status","name","description","body","JSON","stringify","about","link","cardId","avatar","Cards","likes","onCardClick","onClick","type","title","length","Main","onEditProfile","onAddPlace","onEditAvatar","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","promises","getUserInfo","getInitialCards","all","results","user","map","item","id","_id","owner","setupCards","catch","err","console","log","style","backgroundImage","card","key","PopupWithForm","buttonTitle","children","isOpen","onClose","action","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","maxLength","minLength","required","autoComplete","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"0LAWeA,MARf,WACE,OACE,4BAAQC,UAAU,UAChB,yBAAKC,IAAKC,IAAMC,IAAI,0DAAuBH,UAAU,mBCI5CI,MARf,WACE,OACE,4BAAQJ,UAAU,UAChB,uBAAGA,UAAU,qBAAb,4G,cCsKOK,EAAM,I,WA1KjB,WAAYC,GAAU,oBACpBC,KAAKC,OAASF,EAAQG,QACtBF,KAAKG,eAAiBJ,EAAQK,QAAQC,cACtCL,KAAKM,aAAeP,EAAQK,QAAQ,gB,0DAOpC,OAAOG,MAAM,GAAD,OAAIP,KAAKC,OAAT,aAA4B,CACtCO,OAAQ,MACRJ,QAAS,CACPC,cAAeL,KAAKG,kBAErBM,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,wCAQvC,OAAOR,MAAM,GAAD,OAAIP,KAAKC,OAAT,UAAyB,CACnCO,OAAQ,MACRJ,QAAS,CACPC,cAAeL,KAAKG,kBAErBM,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,qCAOL,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAClB,OAAOV,MAAM,GAAD,OAAIP,KAAKC,OAAT,aAA4B,CACtCO,OAAQ,QACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,cAEvBY,KAAMC,KAAKC,UAAU,CACnBJ,KAAMA,EACNK,MAAOJ,MAERR,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAOb,IAAfC,EAAc,EAAdA,KAAMM,EAAQ,EAARA,KACjB,OAAOf,MAAM,GAAD,OAAIP,KAAKC,OAAT,UAAyB,CACnCO,OAAQ,OACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,cAEvBY,KAAMC,KAAKC,UAAU,CACnBJ,KAAMA,EACNM,KAAMA,MAEPb,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,8BAOjCQ,GACN,OAAOhB,MAAM,GAAD,OAAIP,KAAKC,OAAT,wBAA+BsB,GAAU,CACnDf,OAAQ,MACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,gBAEtBG,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAO9BQ,GACT,OAAOhB,MAAM,GAAD,OAAIP,KAAKC,OAAT,wBAA+BsB,GAAU,CACnDf,OAAQ,SACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,gBAEtBG,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAO9BQ,GACT,OAAOhB,MAAM,GAAD,OAAIP,KAAKC,OAAT,kBAAyBsB,GAAU,CAC7Cf,OAAQ,SACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,gBAEtBG,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAOnB,IAATO,EAAQ,EAARA,KACX,OAAOf,MAAM,GAAD,OAAIP,KAAKC,OAAT,oBAAmC,CAC7CO,OAAQ,QACRJ,QAAS,CACPC,cAAeL,KAAKG,eACpB,eAAgBH,KAAKM,cAEvBY,KAAMC,KAAKC,UAAU,CACnBI,OAAO,GAAD,OAAKF,OAEZb,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAR,gDAA0BJ,EAAIK,gB,KAOxB,CAAQ,CACzBb,QAAS,8CACTE,QAAS,CACPC,cAAe,uCACf,eAAgB,sBC5ILoB,MAjCf,YAAoD,IAAnCH,EAAkC,EAAlCA,KAAMN,EAA4B,EAA5BA,KAAMU,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAKlC,OACE,wBAAIlC,UAAU,oBACZ,yBACEC,IAAK4B,EACL1B,IAAKoB,EACLvB,UAAU,oBACVmC,QAVN,WACED,EAAY,CAAEL,KAAMA,EAAMN,KAAMA,OAW9B,yBAAKvB,UAAU,2BACb,wBAAIA,UAAU,qBAAqBuB,GACnC,yBAAKvB,UAAU,gCACb,4BACEA,UAAU,8CACVoC,KAAK,SACLC,MAAM,oFAER,uBAAGrC,UAAU,2BAA2BiC,EAAMK,UAGlD,4BACEtC,UAAU,6CACVoC,KAAK,SACLC,MAAM,iDCoDCE,MA7Ef,YAAyE,IAAzDC,EAAwD,EAAxDA,cAAeC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,aAAcR,EAAe,EAAfA,YAAe,EACtCS,IAAMC,WADgC,mBAC/DC,EAD+D,KACrDC,EADqD,OAExBH,IAAMC,WAFkB,mBAE/DG,EAF+D,KAE9CC,EAF8C,OAGlCL,IAAMC,WAH4B,mBAG/DK,EAH+D,KAGnDC,EAHmD,OAI5CP,IAAMC,SAAS,IAJ6B,mBAI/DO,EAJ+D,KAIxDC,EAJwD,KAmCtE,OA7BAT,IAAMU,WAAU,WACd,IAAMC,EAAW,CAACjD,EAAIkD,cAAelD,EAAImD,mBAEzCpC,QAAQqC,IAAIH,GACTtC,MAAK,SAAC0C,GAMT,IAAmBC,IALLD,EAAQ,GAMpBZ,EAAYa,EAAKpC,MACjByB,EAAmBW,EAAK/B,OACxBsB,EAAcS,EAAK5B,QAGrB,SAAoBoB,GAClBC,EACED,EAAMS,KAAI,SAACC,GAAD,MAAW,CACnBC,GAAID,EAAKE,IACTlC,KAAMgC,EAAKhC,KACXN,KAAMsC,EAAKtC,KACXyC,MAAOH,EAAKG,MACZ/B,MAAO4B,EAAK5B,WAjBdgC,CAAWP,EAAQ,OAEpBQ,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAR,gBAAqBF,SAmBtC,IAGD,0BAAMnE,UAAU,WACd,6BAASA,UAAU,WACjB,yBACEA,UAAU,kBACVmC,QAASO,EACT4B,MAAO,CAAEC,gBAAgB,OAAD,OAAStB,EAAT,QAE1B,yBAAKjD,UAAU,wBACb,wBAAIA,UAAU,iBAAiB6C,GAC/B,4BACET,KAAK,SACLpC,UAAU,wCACVqC,MAAM,4HACNF,QAASK,IAEX,uBAAGxC,UAAU,iBAAiB+C,IAEhC,4BACE/C,UAAU,uCACVqC,MAAM,gHACNF,QAASM,KAIb,6BAASzC,UAAU,cACjB,wBAAIA,UAAU,oBACXmD,EAAMS,KAAI,SAACY,GAAD,OACT,kBAAC,EAAD,CACEC,IAAKD,EAAKV,GACVjC,KAAM2C,EAAK3C,KACXN,KAAMiD,EAAKjD,KACXU,MAAOuC,EAAKvC,MACZC,YAAaA,WCtCZwC,MAhCf,YAOI,IANFnD,EAMC,EANDA,KACAc,EAKC,EALDA,MACAsC,EAIC,EAJDA,YACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,OACAC,EACC,EADDA,QAEA,OACE,yBAAK9E,UAAS,8BAAyBuB,EAAzB,YAAiCsD,GAAU,iBACvD,yBAAK7E,UAAU,oBACb,4BACEoC,KAAK,SACLpC,UAAU,0BACVmC,QAAS2C,IAEX,wBAAI9E,UAAU,kBAAkBqC,GAChC,0BACE0C,OAAO,IACPxD,KAAK,aACLvB,UAAS,4BAAuBuB,EAAvB,WAERqD,EACD,4BAAQxC,KAAK,SAASpC,UAAU,cAC7B2E,OCgBEK,MApBf,YAAwC,IAAlBR,EAAiB,EAAjBA,KAAMM,EAAW,EAAXA,QAC1B,OACE,yBACE9E,UAAS,oCAA+BwE,GAAQ,gBAChDV,GAAG,eAEH,yBAAK9D,UAAU,oBACb,4BACEoC,KAAK,SACLpC,UAAU,0BACVqC,MAAM,iMACNF,QAAS2C,IAEX,yBAAK7E,IAAKuE,EAAK3C,KAAM1B,IAAKqE,EAAKnC,MAAOrC,UAAU,iBAChD,wBAAIA,UAAU,wBAAwBwE,EAAKnC,UC4HpC4C,MAxJf,WAAgB,IAAD,EAC+CtC,IAAMC,UAAS,GAD9D,mBACNsC,EADM,KACkBC,EADlB,OAEyCxC,IAAMC,UAAS,GAFxD,mBAENwC,EAFM,KAEeC,EAFf,OAG6C1C,IAAMC,UAAS,GAH5D,mBAGN0C,EAHM,KAGiBC,EAHjB,OAI2B5C,IAAMC,UAAS,GAJ1C,mBAIN4C,EAJM,KAIQC,EAJR,KA0Bb,SAASC,IACPP,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBE,GAAgB,GAGlB,OACE,yBAAKzF,UAAU,QACb,kBAAC,EAAD,MAEA,kBAAC,EAAD,CACEwC,cAhCN,WACE2C,GAA0B,IAgCtB1C,WA7BN,WACE4C,GAAuB,IA6BnB3C,aA1BN,WACE6C,GAAyB,IA0BrBrD,YAvBN,SAAyBsC,GACvBiB,EAAgB,CACdZ,QAAQ,EACRhD,KAAM2C,EAAK3C,KACXQ,MAAOmC,EAAKjD,UAsBZ,kBAAC,EAAD,MAGA,kBAAC,EAAD,CACEA,KAAM,OACNc,MAAO,4HACPsC,YAAa,yDACbE,OAAQK,EACRJ,QAASY,GAET,2BACEnE,KAAK,OACLa,KAAK,OACLuD,YAAY,qBACZC,UAAU,KACVC,UAAU,IACV7F,UAAU,sCACV8D,GAAG,OACHgC,UAAQ,IAEV,0BAAMhC,GAAG,eACT,2BACEvC,KAAK,cACLa,KAAK,OACLuD,YAAY,6CACZI,aAAa,MACbH,UAAU,MACVC,UAAU,IACV7F,UAAU,sCACV8D,GAAG,OACHgC,UAAQ,IAEV,0BAAMhC,GAAG,gBAKX,kBAAC,EAAD,CACEvC,KAAM,MACNc,MAAO,gEACPsC,YAAa,yDACbE,OAAQO,EACRN,QAASY,GAET,2BACEnE,KAAK,OACLa,KAAK,OACLuD,YAAY,mDACZC,UAAU,KACVC,UAAU,IACV7F,UAAU,8DACV8D,GAAG,QACHgC,UAAQ,IAEV,0BAAMhC,GAAG,gBACT,2BACEvC,KAAK,OACLa,KAAK,MACLuD,YAAY,qGACZI,aAAa,MACb/F,UAAU,6DACV8D,GAAG,OACHgC,UAAQ,IAEV,0BAAMhC,GAAG,gBAKX,kBAAC,EAAD,CACEvC,KAAM,SACNc,MAAO,wFACPsC,YAAa,yDACbE,OAAQS,EACRR,QAASY,GAET,2BACEnE,KAAK,OACLa,KAAK,MACLuD,YAAY,qGACZI,aAAa,MACb/F,UAAU,6DACV8D,GAAG,aACHgC,UAAQ,IAEV,0BAAMhC,GAAG,sBAKX,kBAAC,EAAD,CACEvC,KAAM,UACNc,MAAO,2DACPsC,YAAa,eACbG,QAASY,IAKX,kBAAC,EAAD,CACElB,KAAMgB,EACNV,QAASY,MC7IGM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5F,MAAK,SAAA6F,GACJA,EAAaC,gBAEd5C,OAAM,SAAA6C,GACL3C,QAAQ2C,MAAMA,EAAMC,a,sCEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.4bbc3bb2.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../images/logo.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Логотип Mesto-Russia\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020. Кучерявый Кирилл</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","class Api {\n  constructor(options) {\n    this._token = options.baseUrl;\n    this._authorization = options.headers.authorization;\n    this._contentType = options.headers[\"Content-Type\"];\n  }\n\n  //***************************************************************************\n  // Загрузка информации о пользователе с сервера:\n\n  getUserInfo() {\n    return fetch(`${this._token}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Загрузка карточек с сервера:\n\n  getInitialCards() {\n    return fetch(`${this._token}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Редактирование профиля:\n\n  editProfile({ name, description }) {\n    return fetch(`${this._token}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n      body: JSON.stringify({\n        name: name,\n        about: description,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Добавление новой карточки:\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._token}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Добавление лайка:\n\n  addLike(cardId) {\n    return fetch(`${this._token}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Удаление лайка:\n\n  deleteLike(cardId) {\n    return fetch(`${this._token}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Удаление карточки:\n\n  deleteCard(cardId) {\n    return fetch(`${this._token}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Обновление аватара пользователя:\n\n  editAvatar({ link }) {\n    return fetch(`${this._token}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n      body: JSON.stringify({\n        avatar: `${link}`,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n}\n\n//***************************************************************************\n// экземпляра класса Api\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-15\",\n  headers: {\n    authorization: \"805da766-1e17-442b-aa98-c904fbf55e62\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n","import React from \"react\";\n\nfunction Cards({ link, name, likes, onCardClick }) {\n  function handleCardClick() {\n    onCardClick({ link: link, name: name });\n  }\n\n  return (\n    <li className=\"photo-grid__card\">\n      <img\n        src={link}\n        alt={name}\n        className=\"photo-grid__image\"\n        onClick={handleCardClick}\n      />\n      <div className=\"photo-grid__description\">\n        <h2 className=\"photo-grid__title\">{name}</h2>\n        <div className=\"photo-grid__btn_action_likes\">\n          <button\n            className=\"photo-grid__btn photo-grid__btn_action_like\"\n            type=\"button\"\n            title=\"Поставить лайк\"\n          ></button>\n          <p className=\"photo-grid__like-amount\">{likes.length}</p>\n        </div>\n      </div>\n      <button\n        className=\"photo-grid__btn photo-grid__btn_action_del\"\n        type=\"button\"\n        title=\"Удалить\"\n      ></button>\n    </li>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport { api } from \"../utils/api.js\";\nimport Cards from \"./Cards.js\";\n\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick }) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    const promises = [api.getUserInfo(), api.getInitialCards()];\n\n    Promise.all(promises)\n      .then((results) => {\n        setupUser(results[0]);\n        setupCards(results[1]);\n      })\n      .catch((err) => console.log(`Error ${err}`));\n\n    function setupUser(user) {\n      setUserName(user.name);\n      setUserDescription(user.about);\n      setUserAvatar(user.avatar);\n    }\n\n    function setupCards(cards) {\n      setCards(\n        cards.map((item) => ({\n          id: item._id,\n          link: item.link,\n          name: item.name,\n          owner: item.owner,\n          likes: item.likes,\n        }))\n      );\n    }\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div\n          className=\"profile__avatar\"\n          onClick={onEditAvatar}\n          style={{ backgroundImage: `url(${userAvatar})` }}\n        />\n        <div className=\"profile__description\">\n          <h1 className=\"profile__name\">{userName}</h1>\n          <button\n            type=\"button\"\n            className=\"profile__btn profile__btn_action_edit\"\n            title=\"Редактировать профиль\"\n            onClick={onEditProfile}\n          />\n          <p className=\"profile__work\">{userDescription}</p>\n        </div>\n        <button\n          className=\"profile__btn profile__btn_action_add\"\n          title=\"Добавить фотографию\"\n          onClick={onAddPlace}\n        />\n      </section>\n\n      <section className=\"photo-grid\">\n        <ul className=\"photo-grid__list\">\n          {cards.map((card) => (\n            <Cards\n              key={card.id}\n              link={card.link}\n              name={card.name}\n              likes={card.likes}\n              onCardClick={onCardClick}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction PopupWithForm({\n  name,\n  title,\n  buttonTitle,\n  children,\n  isOpen,\n  onClose,\n}) {\n  return (\n    <div className={`popup popup_content_${name} ${isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__btn_action_close\"\n          onClick={onClose}\n        ></button>\n        <h3 className=\"popup__heading\">{title}</h3>\n        <form\n          action=\"#\"\n          name=\"popup-form\"\n          className={`popup__form popup-${name}__form`}\n        >\n          {children}\n          <button type=\"submit\" className=\"popup__btn\">\n            {buttonTitle}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\n\n// function ImagePopup({ link, title, isOpen, onClose }) {\n//   return (\n//     <div\n//       className={`popup popup_content_image ${isOpen && \"popup_opened\"}`}\n//       id=\"popup-image\"\n//     >\n//       <div className=\"popup__image-box\">\n//         <button\n//           type=\"button\"\n//           className=\"popup__btn_action_close\"\n//           title=\"Закрыть форму без сохранения данных\"\n//           onClick={onClose}\n//         ></button>\n//         <img src={link} alt={title} className=\"popup__image\" />\n//         <h2 className=\"popup__image-caption\">{title}</h2>\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <div\n      className={`popup popup_content_image ${card && \"popup_opened\"}`}\n      id=\"popup-image\"\n    >\n      <div className=\"popup__image-box\">\n        <button\n          type=\"button\"\n          className=\"popup__btn_action_close\"\n          title=\"Закрыть форму без сохранения данных\"\n          onClick={onClose}\n        ></button>\n        <img src={card.link} alt={card.title} className=\"popup__image\" />\n        <h2 className=\"popup__image-caption\">{card.title}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      link: card.link,\n      title: card.name,\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n\n      <Footer />\n\n      {/* Profile popup */}\n      <PopupWithForm\n        name={\"edit\"}\n        title={\"Редактировать профиль\"}\n        buttonTitle={\"Сохранить\"}\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Имя\"\n          maxLength=\"40\"\n          minLength=\"2\"\n          className=\"popup__input popup__input_type_name\"\n          id=\"name\"\n          required\n        />\n        <span id=\"name-error\"></span>\n        <input\n          name=\"description\"\n          type=\"text\"\n          placeholder=\"Занятие\"\n          autoComplete=\"off\"\n          maxLength=\"200\"\n          minLength=\"2\"\n          className=\"popup__input popup__input_type_info\"\n          id=\"info\"\n          required\n        />\n        <span id=\"info-error\"></span>\n      </PopupWithForm>\n      {/* *********END********* */}\n\n      {/* Add Img popup */}\n      <PopupWithForm\n        name={\"add\"}\n        title={\"Новое место\"}\n        buttonTitle={\"Сохранить\"}\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Название\"\n          maxLength=\"30\"\n          minLength=\"2\"\n          className=\"popup__input popup__input_type_name popup__input_type_title\"\n          id=\"title\"\n          required\n        />\n        <span id=\"title-error\"></span>\n        <input\n          name=\"link\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          autoComplete=\"off\"\n          className=\"popup__input popup__input_type_info popup__input_type_link\"\n          id=\"link\"\n          required\n        />\n        <span id=\"link-error\"></span>\n      </PopupWithForm>\n      {/* *********END********* */}\n\n      {/* Update avatar popup */}\n      <PopupWithForm\n        name={\"avatar\"}\n        title={\"Обновить аватар\"}\n        buttonTitle={\"Сохранить\"}\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      >\n        <input\n          name=\"link\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          autoComplete=\"off\"\n          className=\"popup__input popup__input_type_info popup__input_type_link\"\n          id=\"link-input\"\n          required\n        />\n        <span id=\"link-input-error\"></span>\n      </PopupWithForm>\n      {/* *********END********* */}\n\n      {/* Img confirm popup */}\n      <PopupWithForm\n        name={\"confirm\"}\n        title={\"Вы уверены?\"}\n        buttonTitle={\"Да\"}\n        onClose={closeAllPopups}\n      ></PopupWithForm>\n      {/* *********END********* */}\n\n      {/* Img wiev popup */}\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n      {/* *********END********* */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}