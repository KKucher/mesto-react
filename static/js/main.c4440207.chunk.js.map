{"version":3,"sources":["components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","components/PopupIsClose.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","_id","link","name","likes","owner","onCardClick","onCardLike","onCardDelete","currentUser","useContext","card","isOwn","cardDeleteButtonClassName","isLiked","some","i","cardLikeButtonClassName","onClick","type","title","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","style","backgroundImage","avatar","about","map","props","key","ImagePopup","isOpen","onClose","id","api","options","this","_token","baseUrl","_authorization","headers","authorization","_contentType","fetch","method","then","res","ok","json","Promise","reject","status","body","JSON","stringify","cardId","PopupWithForm","buttonTitle","children","onSubmit","action","noValidate","EditProfilePopup","onUpdateUser","isLoading","useState","setName","description","setDescription","submitButtonText","useEffect","e","preventDefault","placeholder","maxLength","minLength","value","onChange","target","required","autoComplete","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","setLink","DeleteCardPopup","PopupIsClose","rest","closePopupWithEsc","closePopupWithClick","classList","contains","document","addEventListener","removeEventListener","cloneElement","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoading","isDeleteCardPopupOpen","setDeleteCardPopupOpen","cardDelete","setCardDelete","closeAllPopups","promises","getUserInfo","getInitialCards","all","user","catch","err","console","log","Provider","changeLikeDislikeStatus","newCard","newCards","c","editProfile","result","addNewCard","editAvatar","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.c4440207.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../images/logo.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img src={logo} alt=\"Логотип Mesto-Russia\" className=\"header__logo\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020. Кучерявый Кирилл</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card({\n  _id,\n  link,\n  name,\n  likes,\n  owner,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const card = {\n    _id: _id,\n    link: link,\n    name: name,\n    owner: owner,\n    likes: likes,\n  };\n\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = `photo-grid__btn photo-grid__btn_action_del ${\n    isOwn ? \"\" : \"photo-grid__btn photo-grid__btn_action_del_hidden\"\n  }`;\n\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  const cardLikeButtonClassName = `photo-grid__btn photo-grid__btn_action_like ${\n    isLiked ? \"photo-grid__btn photo-grid__btn_clicked\" : \"\"\n  }`;\n\n  function handleClick() {\n    onCardClick({\n      link: link,\n      name: name,\n    });\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return (\n    <li className=\"photo-grid__card\">\n      <img\n        src={link}\n        alt={name}\n        className=\"photo-grid__image\"\n        onClick={handleClick}\n      />\n      <div className=\"photo-grid__description\">\n        <h2 className=\"photo-grid__title\">{name}</h2>\n        <div className=\"photo-grid__btn_action_likes\">\n          <button\n            className={cardLikeButtonClassName}\n            onClick={handleLikeClick}\n            type=\"button\"\n            title=\"Поставить лайк\"\n          ></button>\n          <p className=\"photo-grid__like-amount\">{likes.length}</p>\n        </div>\n      </div>\n      <button\n        className={cardDeleteButtonClassName}\n        onClick={handleDeleteClick}\n        type=\"button\"\n        title=\"Удалить\"\n      ></button>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick,\n  cards,\n  onCardLike,\n  onCardDelete,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div\n          className=\"profile__avatar\"\n          onClick={onEditAvatar}\n          style={{ backgroundImage: `url(${currentUser.avatar})` }}\n        />\n        <div className=\"profile__description\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button\n            type=\"button\"\n            className=\"profile__btn profile__btn_action_edit\"\n            title=\"Редактировать профиль\"\n            onClick={onEditProfile}\n          />\n          <p className=\"profile__work\">{currentUser.about}</p>\n        </div>\n        <button\n          className=\"profile__btn profile__btn_action_add\"\n          title=\"Добавить фотографию\"\n          onClick={onAddPlace}\n        />\n      </section>\n\n      <section className=\"photo-grid\">\n        <ul className=\"photo-grid__list\">\n          {cards.map((props) => (\n            <Card\n              key={props._id}\n              _id={props._id}\n              owner={props.owner}\n              link={props.link}\n              name={props.name}\n              likes={props.likes}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction ImagePopup({ card, isOpen, onClose }) {\n  return (\n    <div\n      className={`popup popup_content_image ${isOpen && \"popup_opened\"}`}\n      id=\"popup-image\"\n    >\n      <div className=\"popup__image-box\">\n        <button\n          type=\"button\"\n          className=\"popup__btn_action_close\"\n          title=\"Закрыть форму без сохранения данных\"\n          onClick={onClose}\n        ></button>\n        <img src={card.link} alt={card.title} className=\"popup__image\" />\n        <h2 className=\"popup__image-caption\">{card.title}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","class Api {\n  constructor(options) {\n    this._token = options.baseUrl;\n    this._authorization = options.headers.authorization;\n    this._contentType = options.headers[\"Content-Type\"];\n  }\n\n  //***************************************************************************\n  // Загрузка информации о пользователе с сервера:\n\n  getUserInfo() {\n    return fetch(`${this._token}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Загрузка карточек с сервера:\n\n  getInitialCards() {\n    return fetch(`${this._token}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Редактирование профиля:\n\n  editProfile({ name, about }) {\n    return fetch(`${this._token}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Добавление новой карточки:\n\n  addNewCard({ name, link }) {\n    return fetch(`${this._token}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Добавление/удаление лайка:\n\n  changeLikeDislikeStatus(cardId, isLiked) {\n    return fetch(`${this._token}/cards/likes/${cardId}`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Удаление карточки:\n\n  deleteCard(cardId) {\n    return fetch(`${this._token}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  //***************************************************************************\n  // Обновление аватара пользователя:\n\n  editAvatar({ avatar }) {\n    return fetch(`${this._token}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": this._contentType,\n      },\n      body: JSON.stringify({\n        avatar: `${avatar}`,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n}\n\n//***************************************************************************\n// экземпляра класса Api\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-15\",\n  headers: {\n    authorization: \"805da766-1e17-442b-aa98-c904fbf55e62\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n","import React from \"react\";\n\nfunction PopupWithForm({\n  name,\n  title,\n  buttonTitle,\n  children,\n  isOpen,\n  onClose,\n  onSubmit,\n}) {\n  return (\n    <div className={`popup popup_content_${name} ${isOpen && \"popup_opened\"}`}>\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          className=\"popup__btn_action_close\"\n          onClick={onClose}\n        ></button>\n        <h3 className=\"popup__heading\">{title}</h3>\n        <form\n          action=\"#\"\n          name=\"popup-form\"\n          className={`popup__form popup-${name}__form`}\n          onSubmit={onSubmit}\n          noValidate\n        >\n          {children}\n          <button type=\"submit\" className=\"popup__btn\">\n            {buttonTitle}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const currentUser = React.useContext(CurrentUserContext);\n  const submitButtonText = isLoading ? \"Сохранение...\" : \"Сохранить\";\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      name={\"edit\"}\n      title={\"Редактировать профиль\"}\n      buttonTitle={submitButtonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Имя\"\n        maxLength=\"40\"\n        minLength=\"2\"\n        className=\"popup__input popup__input_type_name\"\n        id=\"name\"\n        value={name || \"\"}\n        onChange={handleNameChange}\n        required\n      />\n      <span id=\"name-error\"></span>\n      <input\n        name=\"description\"\n        type=\"text\"\n        placeholder=\"Занятие\"\n        autoComplete=\"off\"\n        maxLength=\"200\"\n        minLength=\"2\"\n        className=\"popup__input popup__input_type_info\"\n        id=\"info\"\n        value={description || \"\"}\n        onChange={handleDescriptionChange}\n        required\n      />\n      <span id=\"info-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoading }) {\n  const avatarRef = React.useRef();\n  const submitButtonText = isLoading ? \"Сохранение...\" : \"Сохранить\";\n\n  // Сброс полей ввода:\n  //***************************************************************************\n  React.useEffect(() => {\n    avatarRef.current.value = \"\";\n  }, [isOpen]);\n  //***************************************************************************\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name={\"avatar\"}\n      title={\"Обновить аватар\"}\n      buttonTitle={submitButtonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        name=\"link\"\n        type=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        autoComplete=\"off\"\n        className=\"popup__input popup__input_type_info popup__input_type_link\"\n        id=\"link-input\"\n        ref={avatarRef}\n        required\n      />\n      <span id=\"link-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoading }) {\n  const [name, setName] = React.useState(\"\");\n  const [link, setLink] = React.useState(\"\");\n  const submitButtonText = isLoading ? \"Сохранение...\" : \"Сохранить\";\n\n  // Сброс полей ввода:\n  //***************************************************************************\n  React.useEffect(() => {\n    setName(\"\");\n    setLink(\"\");\n  }, [isOpen]);\n  //***************************************************************************\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({ name, link });\n  }\n\n  return (\n    <PopupWithForm\n      name={\"add\"}\n      title={\"Новое место\"}\n      buttonTitle={submitButtonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Название\"\n        maxLength=\"30\"\n        minLength=\"2\"\n        className=\"popup__input popup__input_type_name popup__input_type_title\"\n        id=\"title\"\n        value={name || \"\"}\n        onChange={handleNameChange}\n        required\n      />\n      <span id=\"title-error\"></span>\n      <input\n        name=\"link\"\n        type=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        autoComplete=\"off\"\n        className=\"popup__input popup__input_type_info popup__input_type_link\"\n        id=\"link\"\n        value={link || \"\"}\n        onChange={handleLinkChange}\n        required\n      />\n      <span id=\"link-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction DeleteCardPopup({ card, isOpen, onClose, onCardDelete, isLoading }) {\n  const submitButtonText = isLoading ? \"Удаление...\" : \"Да\";\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onCardDelete(card);\n  };\n\n  return (\n    <PopupWithForm\n      name={\"confirm\"}\n      title={\"Вы уверены?\"}\n      buttonTitle={submitButtonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    />\n  );\n}\n\nexport default DeleteCardPopup;\n","import React from \"react\";\n\nfunction PopupIsClose(props) {\n  const { children, ...rest } = props;\n\n  React.useEffect(() => {\n    function closePopupWithEsc(e) {\n      if (e.key === \"Escape\") {\n        children.props.onClose();\n      }\n    }\n\n    function closePopupWithClick(e) {\n      if (e.target.classList.contains(\"popup\")) {\n        children.props.onClose();\n      }\n    }\n\n    document.addEventListener(\"click\", closePopupWithClick);\n    document.addEventListener(\"keydown\", closePopupWithEsc);\n\n    return () => {\n      document.removeEventListener(\"click\", closePopupWithClick);\n      document.removeEventListener(\"keydown\", closePopupWithEsc);\n    };\n  }, [children]);\n\n  return <> {React.cloneElement(children, { ...rest })} </>;\n}\n\nexport default PopupIsClose;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport { api } from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport PopupIsClose from \"./PopupIsClose\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setLoading] = React.useState(false);\n  const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false);\n  const [cardDelete, setCardDelete] = React.useState({});\n\n  // Обработчики событий (по клику):\n  //***************************************************************************\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      link: card.link,\n      title: card.name,\n    });\n  }\n\n  function handleDeleteCardClick(card) {\n    setDeleteCardPopupOpen(true);\n    setCardDelete(card);\n  }\n\n  // Закрытие попапов:\n  //***************************************************************************\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({ isOpen: false });\n    setLoading(false);\n    setDeleteCardPopupOpen(false);\n  }\n\n  // Изменение данных пользователя:\n  //***************************************************************************\n  function handleUpdateUser({ name, about }) {\n    setLoading(true);\n    api\n      .editProfile({ name, about })\n      .then((result) => {\n        setCurrentUser(result);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Error ${err}`));\n  }\n\n  // Изменение аватара:\n  //***************************************************************************\n  function handleUpdateAvatar({ avatar }) {\n    setLoading(true);\n    api\n      .editAvatar({ avatar })\n      .then((result) => {\n        setCurrentUser(result);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Error ${err}`));\n  }\n\n  // Поставить/удалить лайк:\n  //***************************************************************************\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    api\n      .changeLikeDislikeStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => console.log(`Error ${err}`));\n  }\n\n  // Удалить карточку:\n  //***************************************************************************\n  function handleCardDelete(card) {\n    setLoading(true);\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Error ${err}`));\n  }\n\n  // Добавить карточки:\n  //***************************************************************************\n  function handleAddPlaceSubmit({ name, link }) {\n    setLoading(true);\n    api\n      .addNewCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Error ${err}`));\n  }\n\n  // Загрузка карточек и информации о пользователе с сервера:\n  //***************************************************************************\n  React.useEffect(() => {\n    const promises = [api.getUserInfo(), api.getInitialCards()];\n\n    Promise.all(promises)\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => console.log(`Error ${err}`));\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleDeleteCardClick}\n        />\n\n        {/* Profile popup */}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoading}\n        />\n\n        {/* Add new card popup */}\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoading}\n        />\n\n        {/* Avatar popup */}\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        />\n\n        {/* Img confirm popup */}\n        <DeleteCardPopup\n          card={cardDelete}\n          isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n          isLoading={isLoading}\n        />\n\n        {/* Img wiev popup */}\n        <PopupIsClose>\n          <ImagePopup\n            card={selectedCard}\n            isOpen={selectedCard.isOpen}\n            onClose={closeAllPopups}\n          />\n        </PopupIsClose>\n\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}